ARM GAS  /tmp/ccns2gty.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "main.c"
  19              		.section	.text.main,"ax",%progbits
  20              		.align	1
  21              		.global	main
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	main:
  27              	.LFB144:
   1:main.c        **** /*******************************************************************************
   2:main.c        **** *
   3:main.c        **** * FILE: 
   4:main.c        **** *       main.c
   5:main.c        **** *
   6:main.c        **** * DESCRIPTION: 
   7:main.c        **** *		Pings another XBee module and indicates to PC when a ping code has 
   8:main.c        **** *       received. Used to perform range testing and bidirectional communcation
   9:main.c        **** *       testing.	
  10:main.c        **** *
  11:main.c        **** *******************************************************************************/
  12:main.c        **** 
  13:main.c        **** 
  14:main.c        **** /*------------------------------------------------------------------------------
  15:main.c        **** Standard Includes                                                                     
  16:main.c        **** ------------------------------------------------------------------------------*/
  17:main.c        **** 
  18:main.c        **** 
  19:main.c        **** /*------------------------------------------------------------------------------
  20:main.c        **** Project Includes                                                                     
  21:main.c        **** ------------------------------------------------------------------------------*/
  22:main.c        **** 
  23:main.c        **** /* Pin definitions, main prototypes, error codes */
  24:main.c        **** #include "main.h"
  25:main.c        **** #include "init.h"
  26:main.c        **** #include "sdr_pin_defines_A0005.h"
  27:main.c        **** #include "sdr_error.h"
  28:main.c        **** 
  29:main.c        **** /* SDR Modules */
  30:main.c        **** #include "commands.h"
  31:main.c        **** #include "led.h"
ARM GAS  /tmp/ccns2gty.s 			page 2


  32:main.c        **** #include "rs485.h"
  33:main.c        **** #include "usb.h"
  34:main.c        **** #include "wireless.h"
  35:main.c        **** 
  36:main.c        **** 
  37:main.c        **** /*------------------------------------------------------------------------------
  38:main.c        **** Global Variables                                                                  
  39:main.c        **** ------------------------------------------------------------------------------*/
  40:main.c        **** 
  41:main.c        **** /* MCU Peripheral handles */
  42:main.c        **** UART_HandleTypeDef huart1; /* USB UART    */
  43:main.c        **** UART_HandleTypeDef huart4; /* Xbee UART   */
  44:main.c        **** UART_HandleTypeDef huart5; /* RS-485 UART */
  45:main.c        **** 
  46:main.c        **** 
  47:main.c        **** /*------------------------------------------------------------------------------
  48:main.c        **** Application entry point                                                      
  49:main.c        **** ------------------------------------------------------------------------------*/
  50:main.c        **** int main
  51:main.c        **** 	(
  52:main.c        **** 	void
  53:main.c        **** 	)
  54:main.c        **** {
  28              		.loc 1 54 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  55:main.c        **** /*------------------------------------------------------------------------------
  56:main.c        ****  Local Variables 
  57:main.c        **** ------------------------------------------------------------------------------*/
  58:main.c        **** uint8_t       command;          /* SDEC command                               */
  39              		.loc 1 58 1 view .LVU1
  59:main.c        **** uint8_t       board_code;       /* Ping code of connected board               */
  40              		.loc 1 59 1 view .LVU2
  60:main.c        **** #ifdef USE_RS485
  61:main.c        **** 	RS485_STATUS rs485_status; /* RS485 return codes                  */
  41              		.loc 1 61 2 view .LVU3
  62:main.c        **** #else
  63:main.c        **** 	RF_STATUS    rf_status;    /* Status of wireless module           */
  64:main.c        **** #endif
  65:main.c        **** USB_STATUS usb_status;         /* Status of USB module                */
  42              		.loc 1 65 1 view .LVU4
  66:main.c        **** 
  67:main.c        **** 
  68:main.c        **** /*------------------------------------------------------------------------------
  69:main.c        ****  Initializations                                                             
  70:main.c        **** ------------------------------------------------------------------------------*/
  71:main.c        **** #ifdef USE_RS485
  72:main.c        **** 	rs485_status = RS485_OK;
  43              		.loc 1 72 2 view .LVU5
ARM GAS  /tmp/ccns2gty.s 			page 3


  44              	.LVL0:
  73:main.c        **** #else
  74:main.c        **** 	rf_status    = RF_OK;
  75:main.c        **** #endif
  76:main.c        **** usb_status = USB_OK;
  45              		.loc 1 76 1 view .LVU6
  77:main.c        **** 
  78:main.c        **** 
  79:main.c        **** /*------------------------------------------------------------------------------
  80:main.c        ****  MCU Initialization                                                             
  81:main.c        **** ------------------------------------------------------------------------------*/
  82:main.c        **** HAL_Init          ();   /* CMSIS HAL */
  46              		.loc 1 82 1 view .LVU7
  47 0004 FFF7FEFF 		bl	HAL_Init
  48              	.LVL1:
  83:main.c        **** SystemClock_Config();   /* SysClock  */
  49              		.loc 1 83 1 view .LVU8
  50 0008 FFF7FEFF 		bl	SystemClock_Config
  51              	.LVL2:
  84:main.c        **** GPIO_Init         ();   /* GPIO Pins */
  52              		.loc 1 84 1 view .LVU9
  53 000c FFF7FEFF 		bl	GPIO_Init
  54              	.LVL3:
  85:main.c        **** XBee_UART_Init    ();   /* XBee      */
  55              		.loc 1 85 1 view .LVU10
  56 0010 FFF7FEFF 		bl	XBee_UART_Init
  57              	.LVL4:
  86:main.c        **** USB_UART_Init     ();   /* USB       */
  58              		.loc 1 86 1 view .LVU11
  59 0014 FFF7FEFF 		bl	USB_UART_Init
  60              	.LVL5:
  87:main.c        **** RS485_UART_Init   ();   /* RS485     */
  61              		.loc 1 87 1 view .LVU12
  62 0018 FFF7FEFF 		bl	RS485_UART_Init
  63              	.LVL6:
  88:main.c        **** 
  89:main.c        **** 
  90:main.c        **** /*------------------------------------------------------------------------------
  91:main.c        ****  Initial Setup 
  92:main.c        **** ------------------------------------------------------------------------------*/
  93:main.c        **** 
  94:main.c        **** /* Successfuly initialization LED indication */
  95:main.c        **** led_set_color( LED_GREEN );
  64              		.loc 1 95 1 view .LVU13
  65 001c 0120     		movs	r0, #1
  66 001e FFF7FEFF 		bl	led_set_color
  67              	.LVL7:
  68 0022 14E0     		b	.L2
  69              	.LVL8:
  70              	.L4:
  96:main.c        **** 
  97:main.c        **** 
  98:main.c        **** /*------------------------------------------------------------------------------
  99:main.c        ****  Event Loop                                                                  
 100:main.c        **** ------------------------------------------------------------------------------*/
 101:main.c        **** while ( 1 )
 102:main.c        **** 	{
ARM GAS  /tmp/ccns2gty.s 			page 4


 103:main.c        **** 	/* Read data from UART reciever */
 104:main.c        ****     usb_status = usb_receive( &command, sizeof( command ), HAL_DEFAULT_TIMEOUT );
 105:main.c        **** 
 106:main.c        **** 		/* Parse command input if HAL_UART_Receive doesn't timeout */
 107:main.c        **** 	if ( usb_status != USB_TIMEOUT )
 108:main.c        **** 		{
 109:main.c        **** 		switch( command )
 110:main.c        **** 			{
 111:main.c        **** 			/*-----------------------------------------------------------------
 112:main.c        **** 			 PING Command	
 113:main.c        **** 			------------------------------------------------------------------*/
 114:main.c        **** 			case PING_OP:
 115:main.c        **** 				{
 116:main.c        **** 				/* Send Command to engine controller */
 117:main.c        **** 				rs485_status = rs485_transmit( &command         , 
  71              		.loc 1 117 5 view .LVU14
  72              		.loc 1 117 20 is_stmt 0 view .LVU15
  73 0024 1422     		movs	r2, #20
  74 0026 0121     		movs	r1, #1
  75 0028 0DF10700 		add	r0, sp, #7
  76              	.LVL9:
  77              		.loc 1 117 20 view .LVU16
  78 002c FFF7FEFF 		bl	rs485_transmit
  79              	.LVL10:
 118:main.c        **** 				                               sizeof( command ), 
 119:main.c        **** 											   RS485_DEFAULT_TIMEOUT );
 120:main.c        **** 				if ( rs485_status != RS485_OK )
  80              		.loc 1 120 5 is_stmt 1 view .LVU17
  81              		.loc 1 120 8 is_stmt 0 view .LVU18
  82 0030 A8BB     		cbnz	r0, .L11
  83              	.LVL11:
  84              	.L6:
 121:main.c        **** 					{
 122:main.c        **** 					Error_Handler( ERROR_RS485_UART_ERROR );
 123:main.c        **** 					}
 124:main.c        **** 
 125:main.c        **** 				/* Receive Engine controller ping response */
 126:main.c        **** 				rs485_status = rs485_receive( &board_code         , 
  85              		.loc 1 126 5 is_stmt 1 view .LVU19
  86              		.loc 1 126 20 is_stmt 0 view .LVU20
  87 0032 1422     		movs	r2, #20
  88 0034 0121     		movs	r1, #1
  89 0036 0DF10600 		add	r0, sp, #6
  90 003a FFF7FEFF 		bl	rs485_receive
  91              	.LVL12:
 127:main.c        **** 				                              sizeof( board_code ), 
 128:main.c        **** 											  RS485_DEFAULT_TIMEOUT );
 129:main.c        **** 				if ( rs485_status != RS485_OK )
  92              		.loc 1 129 5 is_stmt 1 view .LVU21
  93              		.loc 1 129 8 is_stmt 0 view .LVU22
  94 003e 90BB     		cbnz	r0, .L12
  95              	.LVL13:
  96              	.L7:
 130:main.c        **** 					{
 131:main.c        **** 					Error_Handler( ERROR_RS485_UART_ERROR );
 132:main.c        **** 					}
 133:main.c        **** 				
ARM GAS  /tmp/ccns2gty.s 			page 5


 134:main.c        **** 				/* Transmit Ping response back to PC */
 135:main.c        **** 				usb_status = usb_transmit( &board_code, 
  97              		.loc 1 135 5 is_stmt 1 view .LVU23
  98              		.loc 1 135 18 is_stmt 0 view .LVU24
  99 0040 1422     		movs	r2, #20
 100 0042 0121     		movs	r1, #1
 101 0044 0DF10600 		add	r0, sp, #6
 102 0048 FFF7FEFF 		bl	usb_transmit
 103              	.LVL14:
 136:main.c        **** 				                           sizeof( board_code ), 
 137:main.c        **** 										   RS485_DEFAULT_TIMEOUT );
 138:main.c        **** 				if ( usb_status != USB_OK ) 
 104              		.loc 1 138 5 is_stmt 1 view .LVU25
 105              		.loc 1 138 8 is_stmt 0 view .LVU26
 106 004c 78BB     		cbnz	r0, .L13
 107              	.LVL15:
 108              	.L2:
 101:main.c        **** 	{
 109              		.loc 1 101 1 is_stmt 1 view .LVU27
 104:main.c        **** 
 110              		.loc 1 104 5 view .LVU28
 104:main.c        **** 
 111              		.loc 1 104 18 is_stmt 0 view .LVU29
 112 004e 0122     		movs	r2, #1
 113 0050 1146     		mov	r1, r2
 114 0052 0DF10700 		add	r0, sp, #7
 115 0056 FFF7FEFF 		bl	usb_receive
 116              	.LVL16:
 107:main.c        **** 		{
 117              		.loc 1 107 2 is_stmt 1 view .LVU30
 107:main.c        **** 		{
 118              		.loc 1 107 5 is_stmt 0 view .LVU31
 119 005a 0228     		cmp	r0, #2
 120 005c F7D0     		beq	.L2
 109:main.c        **** 			{
 121              		.loc 1 109 3 is_stmt 1 view .LVU32
 122 005e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 123 0062 012B     		cmp	r3, #1
 124 0064 DED0     		beq	.L4
 125 0066 022B     		cmp	r3, #2
 126 0068 F1D1     		bne	.L2
 139:main.c        **** 					{
 140:main.c        **** 					Error_Handler( ERROR_USB_UART_ERROR );
 141:main.c        **** 					}
 142:main.c        **** 				
 143:main.c        **** 				break;
 144:main.c        **** 				} /* PING_OP */
 145:main.c        **** 
 146:main.c        **** 			/*-----------------------------------------------------------------
 147:main.c        **** 			 CONNECT Command	
 148:main.c        **** 			------------------------------------------------------------------*/
 149:main.c        **** 			case CONNECT_OP:
 150:main.c        **** 				{
 151:main.c        **** 				/* Send Command to engine controller */
 152:main.c        **** 				rs485_status = rs485_transmit( &command         , 
 127              		.loc 1 152 5 view .LVU33
 128              		.loc 1 152 20 is_stmt 0 view .LVU34
ARM GAS  /tmp/ccns2gty.s 			page 6


 129 006a 1422     		movs	r2, #20
 130 006c 0121     		movs	r1, #1
 131 006e 0DF10700 		add	r0, sp, #7
 132              	.LVL17:
 133              		.loc 1 152 20 view .LVU35
 134 0072 FFF7FEFF 		bl	rs485_transmit
 135              	.LVL18:
 153:main.c        **** 				                               sizeof( command ), 
 154:main.c        **** 											   RS485_DEFAULT_TIMEOUT );
 155:main.c        **** 				if ( rs485_status != RS485_OK )
 136              		.loc 1 155 5 is_stmt 1 view .LVU36
 137              		.loc 1 155 8 is_stmt 0 view .LVU37
 138 0076 F0B9     		cbnz	r0, .L14
 139              	.LVL19:
 140              	.L8:
 156:main.c        **** 					{
 157:main.c        **** 					Error_Handler( ERROR_RS485_UART_ERROR );
 158:main.c        **** 					}
 159:main.c        **** 
 160:main.c        **** 				/* Receive Engine controller ping response */
 161:main.c        **** 				rs485_status = rs485_receive( &board_code         , 
 141              		.loc 1 161 5 is_stmt 1 view .LVU38
 142              		.loc 1 161 20 is_stmt 0 view .LVU39
 143 0078 1422     		movs	r2, #20
 144 007a 0121     		movs	r1, #1
 145 007c 0DF10600 		add	r0, sp, #6
 146 0080 FFF7FEFF 		bl	rs485_receive
 147              	.LVL20:
 162:main.c        **** 				                              sizeof( board_code ), 
 163:main.c        **** 											  RS485_DEFAULT_TIMEOUT );
 164:main.c        **** 				if ( rs485_status != RS485_OK )
 148              		.loc 1 164 5 is_stmt 1 view .LVU40
 149              		.loc 1 164 8 is_stmt 0 view .LVU41
 150 0084 D8B9     		cbnz	r0, .L15
 151              	.LVL21:
 152              	.L9:
 165:main.c        **** 					{
 166:main.c        **** 					Error_Handler( ERROR_RS485_UART_ERROR );
 167:main.c        **** 					}
 168:main.c        **** 				
 169:main.c        **** 				/* Transmit Ping response back to PC */
 170:main.c        **** 				usb_status = usb_transmit( &board_code, 
 153              		.loc 1 170 5 is_stmt 1 view .LVU42
 154              		.loc 1 170 18 is_stmt 0 view .LVU43
 155 0086 1422     		movs	r2, #20
 156 0088 0121     		movs	r1, #1
 157 008a 0DF10600 		add	r0, sp, #6
 158 008e FFF7FEFF 		bl	usb_transmit
 159              	.LVL22:
 171:main.c        **** 				                           sizeof( board_code ), 
 172:main.c        **** 										   RS485_DEFAULT_TIMEOUT );
 173:main.c        **** 				if ( usb_status != USB_OK ) 
 160              		.loc 1 173 5 is_stmt 1 view .LVU44
 161              		.loc 1 173 8 is_stmt 0 view .LVU45
 162 0092 0028     		cmp	r0, #0
 163 0094 DBD0     		beq	.L2
 174:main.c        **** 					{
ARM GAS  /tmp/ccns2gty.s 			page 7


 175:main.c        **** 					Error_Handler( ERROR_USB_UART_ERROR );
 164              		.loc 1 175 6 is_stmt 1 view .LVU46
 165 0096 1720     		movs	r0, #23
 166              	.LVL23:
 167              		.loc 1 175 6 is_stmt 0 view .LVU47
 168 0098 FFF7FEFF 		bl	Error_Handler
 169              	.LVL24:
 170 009c D7E7     		b	.L2
 171              	.LVL25:
 172              	.L11:
 122:main.c        **** 					}
 173              		.loc 1 122 6 is_stmt 1 view .LVU48
 174 009e 2B20     		movs	r0, #43
 175              	.LVL26:
 122:main.c        **** 					}
 176              		.loc 1 122 6 is_stmt 0 view .LVU49
 177 00a0 FFF7FEFF 		bl	Error_Handler
 178              	.LVL27:
 179 00a4 C5E7     		b	.L6
 180              	.LVL28:
 181              	.L12:
 131:main.c        **** 					}
 182              		.loc 1 131 6 is_stmt 1 view .LVU50
 183 00a6 2B20     		movs	r0, #43
 184              	.LVL29:
 131:main.c        **** 					}
 185              		.loc 1 131 6 is_stmt 0 view .LVU51
 186 00a8 FFF7FEFF 		bl	Error_Handler
 187              	.LVL30:
 188 00ac C8E7     		b	.L7
 189              	.LVL31:
 190              	.L13:
 140:main.c        **** 					}
 191              		.loc 1 140 6 is_stmt 1 view .LVU52
 192 00ae 1720     		movs	r0, #23
 193              	.LVL32:
 140:main.c        **** 					}
 194              		.loc 1 140 6 is_stmt 0 view .LVU53
 195 00b0 FFF7FEFF 		bl	Error_Handler
 196              	.LVL33:
 197 00b4 CBE7     		b	.L2
 198              	.LVL34:
 199              	.L14:
 157:main.c        **** 					}
 200              		.loc 1 157 6 is_stmt 1 view .LVU54
 201 00b6 2B20     		movs	r0, #43
 202              	.LVL35:
 157:main.c        **** 					}
 203              		.loc 1 157 6 is_stmt 0 view .LVU55
 204 00b8 FFF7FEFF 		bl	Error_Handler
 205              	.LVL36:
 206 00bc DCE7     		b	.L8
 207              	.LVL37:
 208              	.L15:
 166:main.c        **** 					}
 209              		.loc 1 166 6 is_stmt 1 view .LVU56
 210 00be 2B20     		movs	r0, #43
ARM GAS  /tmp/ccns2gty.s 			page 8


 211              	.LVL38:
 166:main.c        **** 					}
 212              		.loc 1 166 6 is_stmt 0 view .LVU57
 213 00c0 FFF7FEFF 		bl	Error_Handler
 214              	.LVL39:
 215 00c4 DFE7     		b	.L9
 216              		.cfi_endproc
 217              	.LFE144:
 219              		.global	huart5
 220              		.section	.bss.huart5,"aw",%nobits
 221              		.align	2
 224              	huart5:
 225 0000 00000000 		.space	144
 225      00000000 
 225      00000000 
 225      00000000 
 225      00000000 
 226              		.global	huart4
 227              		.section	.bss.huart4,"aw",%nobits
 228              		.align	2
 231              	huart4:
 232 0000 00000000 		.space	144
 232      00000000 
 232      00000000 
 232      00000000 
 232      00000000 
 233              		.global	huart1
 234              		.section	.bss.huart1,"aw",%nobits
 235              		.align	2
 238              	huart1:
 239 0000 00000000 		.space	144
 239      00000000 
 239      00000000 
 239      00000000 
 239      00000000 
 240              		.text
 241              	.Letext0:
 242              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 243              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 244              		.file 4 "../../../lib/Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 245              		.file 5 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 246              		.file 6 "../../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 247              		.file 7 "../../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 248              		.file 8 "../../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 249              		.file 9 "../../../lib/util/sdr_error.h"
 250              		.file 10 "../../../lib/sdr_pin_defines_A0005.h"
 251              		.file 11 "../../../mod/led/led.h"
 252              		.file 12 "../../../mod/rs485/rs485.h"
 253              		.file 13 "../../../mod/usb/usb.h"
 254              		.file 14 "main.h"
 255              		.file 15 "../../../init/init.h"
 256              		.file 16 "../../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccns2gty.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccns2gty.s:20     .text.main:0000000000000000 $t
     /tmp/ccns2gty.s:26     .text.main:0000000000000000 main
     /tmp/ccns2gty.s:224    .bss.huart5:0000000000000000 huart5
     /tmp/ccns2gty.s:221    .bss.huart5:0000000000000000 $d
     /tmp/ccns2gty.s:231    .bss.huart4:0000000000000000 huart4
     /tmp/ccns2gty.s:228    .bss.huart4:0000000000000000 $d
     /tmp/ccns2gty.s:238    .bss.huart1:0000000000000000 huart1
     /tmp/ccns2gty.s:235    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_Init
SystemClock_Config
GPIO_Init
XBee_UART_Init
USB_UART_Init
RS485_UART_Init
led_set_color
rs485_transmit
rs485_receive
usb_transmit
usb_receive
Error_Handler
